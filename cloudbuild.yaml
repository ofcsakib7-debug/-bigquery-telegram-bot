options:
  logging: CLOUD_LOGGING_ONLY

steps:
  # Install dependencies
  - name: 'node:18'
    id: Install dependencies
    entrypoint: npm
    args: ['ci']
    
  # Run environment check
  - name: 'node:18'
    id: Environment check
    entrypoint: node
    args: ['tests/environment_check.js']
    
  # Run unit tests
  - name: 'node:18'
    id: Run unit tests
    entrypoint: npm
    args: ['run', 'test:unit']
    env:
      - 'NODE_ENV=test'
      
  # Run integration tests
  - name: 'node:18'
    id: Run integration tests
    entrypoint: npm
    args: ['run', 'test:integration']
    env:
      - 'NODE_ENV=test'
      
  # Run verification tests
  - name: 'node:18'
    id: Run verification tests
    entrypoint: npm
    args: ['run', 'test:verification']
    env:
      - 'NODE_ENV=test'
      
  # Deploy to Cloud Functions
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: Deploy to Cloud Functions
    entrypoint: gcloud
    args:
      - 'functions'
      - 'deploy'
      - 'telegram-bot'
      - '--region=us-central1'
      - '--source=.'
      - '--trigger-http'
      - '--runtime=nodejs18'
      - '--entry-point=bot'
      - '--service-account=${_SERVICE_ACCOUNT}'
      - '--set-env-vars=BOT_TOKEN=${_BOT_TOKEN},GOOGLE_CLOUD_PROJECT=${PROJECT_ID},BIGQUERY_DATASET_ID=${_BIGQUERY_DATASET_ID}'
    secretEnv: ['BOT_TOKEN']

# Set a timeout for the build
timeout: '1200s'

# Available secrets
availableSecrets:
  secretManager:
    - versionName: projects/${PROJECT_ID}/secrets/BOT_TOKEN/versions/latest
      env: 'BOT_TOKEN'

# Substitutions
substitutions:
  _SERVICE_ACCOUNT: 'your-service-account@${PROJECT_ID}.iam.gserviceaccount.com'
  _BIGQUERY_DATASET_ID: 'business_operations'