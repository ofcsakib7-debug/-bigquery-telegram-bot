name: Security Scan
true:
  pull_request:
    branches:
    - main
    - dev
  push:
    branches:
    - main
    - dev
  schedule:
  - cron: 0 2 * * 1
jobs:
  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
    - name: Install dependencies
      run: npm ci
    - name: Run npm audit
      run: "echo \"=== Running npm audit ===\"\nnpm audit --audit-level=moderate ||\
        \ echo \"\u26A0\uFE0F  Vulnerabilities found - check details above\"\n"
    - name: Check for sensitive files
      run: "echo \"=== Checking for sensitive files ===\"\n# Check for common sensitive\
        \ files that shouldn't be committed\nsensitive_files=(\n  \".env\"\n  \"*.key\"\
        \n  \"*.pem\"\n  \"*.cert\"\n  \"credentials.json\"\n  \"service-account.json\"\
        \n)\n\nfound_sensitive=0\nfor pattern in \"${sensitive_files[@]}\"; do\n \
        \ if find . -name \"$pattern\" -not -path \"./node_modules/*\" -not -path\
        \ \"./.git/*\" | grep -q .; then\n    echo \"\u26A0\uFE0F  Found potentially\
        \ sensitive file matching pattern: $pattern\"\n    find . -name \"$pattern\"\
        \ -not -path \"./node_modules/*\" -not -path \"./.git/*\"\n    found_sensitive=1\n\
        \  fi\ndone\n\nif [ $found_sensitive -eq 0 ]; then\n  echo \"\u2705 No sensitive\
        \ files found\"\nelse\n  echo \"\u26A0\uFE0F  Review sensitive files above\"\
        \nfi\n"
    - name: Check package.json for security issues
      run: "echo \"=== Checking package.json for security issues ===\"\nnode -e \"\
        \n  const fs = require('fs');\n  try {\n    const packageJson = JSON.parse(fs.readFileSync('package.json',\
        \ 'utf8'));\n    \n    // Check for scripts that might be dangerous\n    const\
        \ dangerousPatterns = [\n      'rm -rf',\n      'chmod 777',\n      'eval(',\n\
        \      'exec('\n    ];\n    \n    let foundDangerous = false;\n    if (packageJson.scripts)\
        \ {\n      for (const [name, script] of Object.entries(packageJson.scripts))\
        \ {\n        for (const pattern of dangerousPatterns) {\n          if (script.includes(pattern))\
        \ {\n            console.log('\u26A0\uFE0F  Potentially dangerous script found\
        \ in package.json:');\n            console.log('   Script name:', name);\n\
        \            console.log('   Script content:', script);\n            console.log('\
        \   Dangerous pattern:', pattern);\n            foundDangerous = true;\n \
        \         }\n        }\n      }\n    }\n    \n    if (!foundDangerous) {\n\
        \      console.log('\u2705 No dangerous scripts found in package.json');\n\
        \    }\n  } catch (error) {\n    console.log('\u274C Error checking package.json:',\
        \ error.message);\n  }\n\"\n"
    - if: always()
      name: Generate security report
      run: 'echo "=== Security Scan Report ==="

        echo "Job status: ${{ job.status }}"

        echo "Branch: ${{ github.ref }}"

        echo "Commit: ${{ github.sha }}"

        echo ""

        echo "Security scan completed at: $(date -u)"

        '
    - if: always()
      name: Upload security report
      uses: actions/upload-artifact@v4
      with:
        name: security-report-${{ github.run_number }}
        path: security-report.txt
