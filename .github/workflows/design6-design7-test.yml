# .github/workflows/design6-design7-test.yml
name: Test Design 6 & 7 Components

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  design6-design7-test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x]
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run Design 6 (Search Validation) tests
      run: |
        echo "=== Testing Design 6: Context-Aware Search Validation ==="
        node -e "
          try {
            const { validate_search_query } = require('./functions/search_validation');
            console.log('✅ Search validation module imports successfully');
            
            // Test valid query
            const result1 = validate_search_query('user123', 'e cm');
            console.log('Valid query test:', JSON.stringify(result1));
            
            // Test invalid query
            const result2 = validate_search_query('user123', 'invalid@query');
            console.log('Invalid query test:', JSON.stringify(result2));
            
            console.log('✅ Design 6 tests completed successfully');
          } catch (error) {
            console.log('❌ Design 6 test error:', error.message);
            process.exit(1);
          }
        "
      
    - name: Run Design 7 (Error Detection) tests
      run: |
        echo "=== Testing Design 7: Logical Error Detection ==="
        node -e "
          try {
            const { detectLogicalError } = require('./functions/error_detection');
            console.log('✅ Error detection module imports successfully');
            
            // Test valid finance transaction
            const result1 = detectLogicalError({
              department: 'FINANCE',
              payment_date: new Date('2023-01-15'),
              transaction_date: new Date('2023-01-10'),
              amount: 1000
            });
            console.log('Valid finance transaction test:', JSON.stringify(result1));
            
            // Test invalid finance transaction
            const result2 = detectLogicalError({
              department: 'FINANCE',
              payment_date: new Date('2023-01-05'),
              transaction_date: new Date('2023-01-10'),
              amount: 1000
            });
            console.log('Invalid finance transaction test:', JSON.stringify(result2));
            
            console.log('✅ Design 7 tests completed successfully');
          } catch (error) {
            console.log('❌ Design 7 test error:', error.message);
            process.exit(1);
          }
        "
        
    - name: Run unit tests for Design 6 & 7
      run: |
        echo "=== Running Unit Tests for Design 6 & 7 ==="
        # Check if test files exist
        if [ -f "tests/unit/search_validation.test.js" ]; then
          echo "Running Design 6 unit tests..."
          node tests/unit/search_validation.test.js
        else
          echo "❌ Design 6 test file not found"
          exit 1
        fi
        
        if [ -f "tests/unit/error_detection.test.js" ]; then
          echo "Running Design 7 unit tests..."
          node tests/unit/error_detection.test.js
        else
          echo "❌ Design 7 test file not found"
          exit 1
        fi
        
    - name: Generate test report
      if: always()
      run: |
        echo "=== Design 6 & 7 Test Execution Summary ==="
        echo "Job status: ${{ job.status }}"
        echo "Node version: ${{ matrix.node-version }}"
        echo "Branch: ${{ github.ref }}"
        echo "Commit: ${{ github.sha }}"
        
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: design6-design7-test-results
        path: |
          *.log
          tests/unit/search_validation.test.js
          tests/unit/error_detection.test.js